import{d as c,r as b,w as n}from"./index-d8ed1bec.js";import{p as u}from"./stores-7f07ccfb.js";import{a as k}from"./workflow-service-edf003eb.js";import{w as g}from"./with-loading-f07bedaf.js";import{p as I}from"./route-for-06e4a074.js";import{s as p}from"./parse-with-big-int-561ccb8b.js";import{r as l,a as w}from"./route-for-api-652ea8c7.js";import{v as O}from"./v4-f2cd1a04.js";const P=n(0),W=c([u],([r])=>r.params.namespace),q=c([u],([r])=>r.url.searchParams.get("query")),R=c([u],([r])=>r.url.pathname),T=c([W,q,R,P],([r,o,t,s])=>({namespace:r,query:o,path:t,refresh:s})),v=r=>T.subscribe(({namespace:o,query:t,path:s})=>{s==`${I}/namespaces/${o}/workflows`&&g(B,A,async()=>{const{workflows:f,error:a}=await k(o,{query:t});r(f),a?m.set(a):m.set("")})}),G=n({parameters:{},searchType:"basic"}),A=n(!0),B=n(!0),m=n(""),H=b([],v);async function J({workflow:r,namespace:o,reason:t}){const s=await l("workflow.terminate",{namespace:o,workflowId:r.id,runId:r.runId});return await w(s,{options:{method:"POST",body:p({reason:t})},shouldRetry:!1,notifyOnError:!1})}async function K({namespace:r,workflowExecutions:o,reason:t}){const s=await l("workflows.batch.terminate",{namespace:r}),f=o.map(e=>e.runId).reduce((e,d,h,y)=>(e+=`RunId="${d}"`,h!==y.length-1&&(e+=" OR "),e),""),a=O();return await w(s,{options:{method:"POST",body:p({jobId:a,namespace:r,visibilityQuery:f,reason:t,terminationOperation:{}})},shouldRetry:!1,notifyOnError:!1}),a}async function E({namespace:r,jobId:o}){return new Promise((t,s)=>{F({namespace:r,jobId:o}).then(({state:i})=>{i==="Failed"?s():i!=="Running"?t():setTimeout(async()=>{try{t(E({namespace:r,jobId:o}))}catch{s()}},1e3)})})}async function F({jobId:r,namespace:o}){const t=await l("workflows.batch.describe",{namespace:o});return w(t,{params:{jobId:r}})}export{H as a,m as b,K as c,B as l,E as p,P as r,J as t,A as u,G as w};
