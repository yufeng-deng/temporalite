import{S as i,i as m,s as u,x as f,y as c,z as p,f as _,t as l,C as g}from"../chunks/index-7e739eea.js";/* empty css                    */import{E as d}from"../chunks/error-4b7f75e8.js";import{i as h}from"../chunks/is-network-error-5f9e2367.js";import{p as E}from"../chunks/parse-with-big-int-561ccb8b.js";import"../chunks/navigation-fbe70647.js";import"../chunks/singletons-eca981c1.js";import"../chunks/stores-7f07ccfb.js";import"../chunks/link-6f90152b.js";function y(o){let t,s;return t=new d({props:{error:o[1],status:o[0]}}),{c(){f(t.$$.fragment)},l(r){c(t.$$.fragment,r)},m(r,e){p(t,r,e),s=!0},p(r,[e]){const n={};e&2&&(n.error=r[1]),e&1&&(n.status=r[0]),t.$set(n)},i(r){s||(_(t.$$.fragment,r),s=!0)},o(r){l(t.$$.fragment,r),s=!1},d(r){g(t,r)}}}const F=async function({error:o,status:t}){return{props:{error:o,status:t}}};function C(o,t,s){let{error:r}=t,{status:e}=t,n;try{n=E(r.message),h(n)&&(e=n.statusCode)}catch{}return o.$$set=a=>{"error"in a&&s(1,r=a.error),"status"in a&&s(0,e=a.status)},[e,r]}class N extends i{constructor(t){super(),m(this,t,C,y,u,{error:1,status:0})}}export{N as default,F as load};
